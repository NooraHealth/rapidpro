# Generated by Django 5.1.4 on 2025-02-14 14:56

from django.db import migrations
from django.utils import timezone


def backfill_current_session_uuid(apps, schema_editor):
    Contact = apps.get_model("contacts", "Contact")
    FlowSession = apps.get_model("flows", "FlowSession")

    num_updated, num_session_set, num_flow_cleared = 0, 0, 0

    while True:
        batch_ids = list(
            Contact.objects.filter(current_session_uuid=None)
            .exclude(current_flow=None)
            .values_list("id", flat=True)[:1000]
        )
        if not batch_ids:
            break

        sessions = (
            FlowSession.objects.filter(contact_id__in=batch_ids, status="W").order_by("id").values("uuid", "contact_id")
        )

        # organize into map of contact_id -> session_uuid
        sessions_by_contact = {}
        for session in sessions:
            if session["contact_id"] in sessions_by_contact:  # pragma: no cover
                print(f" > contact #{session['contact_id']} has multiple waiting sessions!")
            sessions_by_contact[session["contact_id"]] = session["uuid"]

        for contact_id, session_uuid in sessions_by_contact.items():
            Contact.objects.filter(id=contact_id).update(current_session_uuid=session_uuid)
            num_session_set += 1

        for contact_id in batch_ids:
            if contact_id not in sessions_by_contact:
                print(f" > contact #{contact_id} has flow set but no waiting session!")
                Contact.objects.filter(id=contact_id).update(current_flow=None, modified_on=timezone.now())
                num_flow_cleared += 1

        num_updated += len(batch_ids)
        print(f"Updated {num_updated} contacts ({num_session_set} sessions set, {num_flow_cleared} flows cleared)")


def apply_manual():  # pragma: no cover
    from django.apps import apps

    backfill_current_session_uuid(apps, None)


class Migration(migrations.Migration):

    dependencies = [
        ("contacts", "0201_contact_current_session_uuid"),
    ]

    operations = [
        migrations.RunPython(backfill_current_session_uuid, migrations.RunPython.noop),
    ]
