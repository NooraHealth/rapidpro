# Generated by Django 5.1.4 on 2025-01-06 21:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contacts", "0198_squashed"),
        ("notifications", "0030_squashed"),
        ("orgs", "0162_squashed"),
    ]

    operations = [
        migrations.AddField(
            model_name="incident",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="incidents",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="contact_import",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="notifications",
                to="contacts.contactimport",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="export",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="notifications",
                to="orgs.export",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="incident",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="notifications",
                to="notifications.incident",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="notifications",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="notifications",
                to="orgs.user",
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on", None)),
                fields=["incident_type"],
                name="incidents_ongoing",
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on", None)),
                fields=["org", "-started_on"],
                name="incidents_org_ongoing",
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on__isnull", False)),
                fields=["org", "-started_on"],
                name="incidents_org_ended",
            ),
        ),
        migrations.AddConstraint(
            model_name="incident",
            constraint=models.UniqueConstraint(
                condition=models.Q(("ended_on", None)),
                fields=("org", "incident_type", "scope"),
                name="incidents_ongoing_scoped",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                condition=models.Q(("medium__contains", "U")),
                fields=["org", "user", "-created_on", "-id"],
                name="notifications_user_ui",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                condition=models.Q(("email_status", "P")),
                fields=["created_on"],
                name="notifications_email_pending",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                condition=models.Q(("is_seen", False)),
                fields=["org", "notification_type", "user"],
                name="notifications_unseen_of_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="notification",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_seen", False)),
                fields=("org", "notification_type", "scope", "user"),
                name="notifications_unseen_scoped",
            ),
        ),
    ]
