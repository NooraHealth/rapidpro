# Generated by Django 5.2.2 on 2025-07-02 14:48

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("channels", "0206_squashed"),
        ("contacts", "0207_squashed"),
        ("msgs", "0288_squashed"),
        ("orgs", "0171_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="channel",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="channel",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="channel",
            name="org",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="channels",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="channelcount",
            name="channel",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="counts",
                to="channels.channel",
            ),
        ),
        migrations.AddField(
            model_name="channelevent",
            name="channel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="channels.channel"
            ),
        ),
        migrations.AddField(
            model_name="channelevent",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="channel_events",
                to="contacts.contact",
            ),
        ),
        migrations.AddField(
            model_name="channelevent",
            name="contact_urn",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="channel_events",
                to="contacts.contacturn",
            ),
        ),
        migrations.AddField(
            model_name="channelevent",
            name="optin",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="optins",
                to="msgs.optin",
            ),
        ),
        migrations.AddField(
            model_name="channelevent",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="orgs.org"
            ),
        ),
        migrations.AddField(
            model_name="syncevent",
            name="channel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sync_events",
                to="channels.channel",
            ),
        ),
        migrations.AddIndex(
            model_name="channel",
            index=models.Index(
                condition=models.Q(
                    ("channel_type", "A"),
                    ("is_active", True),
                    ("last_seen__isnull", False),
                ),
                fields=["last_seen"],
                name="channels_android_last_seen",
            ),
        ),
        migrations.AddIndex(
            model_name="channelcount",
            index=models.Index(
                models.F("channel"),
                models.F("day"),
                django.contrib.postgres.indexes.OpClass(
                    "scope", name="varchar_pattern_ops"
                ),
                name="channelcount_channel_scope",
            ),
        ),
        migrations.AddIndex(
            model_name="channelcount",
            index=models.Index(
                condition=models.Q(("is_squashed", False)),
                fields=["channel", "day", "scope"],
                name="channelcount_unsquashed",
            ),
        ),
    ]
