# Generated by Django 5.2.2 on 2025-07-02 14:48

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("channels", "0207_squashed"),
        ("contacts", "0208_squashed"),
        ("flows", "0388_squashed"),
        ("msgs", "0288_squashed"),
        ("orgs", "0171_squashed"),
        ("schedules", "0030_squashed"),
        ("templates", "0046_squashed"),
        ("tickets", "0078_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="broadcast",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="groups",
            field=models.ManyToManyField(
                related_name="addressed_broadcasts", to="contacts.contactgroup"
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="modified_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="broadcasts",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="parent",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="children",
                to="msgs.broadcast",
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="schedule",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="broadcast",
                to="schedules.schedule",
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="template",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="templates.template",
            ),
        ),
        migrations.AddField(
            model_name="broadcastmsgcount",
            name="broadcast",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="counts",
                to="msgs.broadcast",
            ),
        ),
        migrations.AddField(
            model_name="label",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="label",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="label",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs_labels",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="labelcount",
            name="label",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="counts",
                to="msgs.label",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="media",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="original",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alternates",
                to="msgs.media",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="broadcast",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs",
                to="msgs.broadcast",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="channel",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs",
                to="channels.channel",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="contact",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs",
                to="contacts.contact",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="contact_urn",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs",
                to="contacts.contacturn",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="created_by",
            field=models.ForeignKey(
                db_index=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="flow",
            field=models.ForeignKey(
                db_constraint=False,
                db_index=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="labels",
            field=models.ManyToManyField(related_name="msgs", to="msgs.label"),
        ),
        migrations.AddField(
            model_name="msg",
            name="org",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="ticket",
            field=models.ForeignKey(
                db_constraint=False,
                db_index=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="tickets.ticket",
            ),
        ),
        migrations.AddField(
            model_name="optin",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="optin",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="optin",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="optins",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="msg",
            name="optin",
            field=models.ForeignKey(
                db_constraint=False,
                db_index=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="msgs.optin",
            ),
        ),
        migrations.AddField(
            model_name="broadcast",
            name="optin",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="msgs.optin"
            ),
        ),
        migrations.AddConstraint(
            model_name="label",
            constraint=models.UniqueConstraint(
                models.F("org"),
                django.db.models.functions.text.Lower("name"),
                name="unique_label_names",
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                condition=models.Q(("original", None)),
                fields=["org", "-created_on"],
                name="media_originals_by_org",
            ),
        ),
        migrations.AddConstraint(
            model_name="optin",
            constraint=models.UniqueConstraint(
                models.F("org"),
                django.db.models.functions.text.Lower("name"),
                name="unique_optin_names",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                fields=["org", "-created_on", "-id"], name="msgs_by_org"
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                fields=["contact", "-created_on", "-id"], name="msgs_by_contact"
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "O"),
                    ("next_attempt__isnull", False),
                    ("status__in", ("I", "E")),
                ),
                fields=["next_attempt", "created_on", "id"],
                name="msgs_outgoing_to_retry",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "O"),
                    ("is_android", True),
                    ("status__in", ("I", "Q", "E")),
                ),
                fields=["created_on"],
                name="msgs_outgoing_android_to_fail",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(("external_id__isnull", False)),
                fields=["channel_id", "external_id"],
                name="msgs_by_external_id",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "I"),
                    ("flow__isnull", True),
                    ("msg_type", "T"),
                    ("status", "H"),
                    ("visibility", "V"),
                ),
                fields=["org", "-created_on", "-id"],
                name="msgs_inbox",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "I"),
                    ("flow__isnull", False),
                    ("msg_type", "T"),
                    ("status", "H"),
                    ("visibility", "V"),
                ),
                fields=["org", "-created_on", "-id"],
                name="msgs_flows",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "I"),
                    ("msg_type", "T"),
                    ("status", "H"),
                    ("visibility", "A"),
                ),
                fields=["org", "-created_on", "-id"],
                name="msgs_archived",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "O"),
                    ("status__in", ("I", "Q", "E", "F")),
                    ("visibility", "V"),
                ),
                fields=["org", "status", "-created_on", "-id"],
                name="msgs_outbox_and_failed",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(
                    ("direction", "O"),
                    ("status__in", ("W", "S", "D", "R")),
                    ("visibility", "V"),
                ),
                fields=["org", "-sent_on", "-id"],
                name="msgs_sent",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(("direction", "I"), ("status", "H")),
                fields=["org", "-modified_on", "-id"],
                name="msgs_api_incoming",
            ),
        ),
        migrations.AddConstraint(
            model_name="msg",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("direction", "I"), ("direction", "O"), _connector="OR"
                ),
                name="direction_is_in_or_out",
            ),
        ),
        migrations.AddConstraint(
            model_name="msg",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("direction", "O"),
                    models.Q(
                        ("channel__isnull", False), ("contact_urn__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="incoming_has_channel_and_urn",
            ),
        ),
        migrations.AddConstraint(
            model_name="msg",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("sent_on__isnull", True),
                    ("status__in", ("W", "S", "D", "R")),
                    _negated=True,
                ),
                name="no_sent_status_without_sent_on",
            ),
        ),
        migrations.AddIndex(
            model_name="broadcast",
            index=models.Index(
                condition=models.Q(("is_active", True), ("schedule__isnull", True)),
                fields=["org", "-created_on", "-id"],
                name="msgs_broadcasts_api",
            ),
        ),
        migrations.AddIndex(
            model_name="broadcast",
            index=models.Index(
                condition=models.Q(("is_active", True), ("schedule__isnull", False)),
                fields=["org", "-created_on"],
                name="msgs_broadcasts_scheduled",
            ),
        ),
    ]
