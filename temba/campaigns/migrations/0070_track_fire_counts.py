# Generated by Django 5.1.4 on 2025-03-05 15:03

from django.db import migrations

SQL = """
----------------------------------------------------------------------
-- Handles INSERT statements on contacts_contactfire table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_contactfire_on_insert() RETURNS TRIGGER AS $$
BEGIN
    -- add positive item counts for all campaign event fire rows being inserted
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT org_id, 'campfires:' || scope, count(*), FALSE FROM newtab WHERE fire_type = 'C' GROUP BY 1, 2;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Handles DELETE statements on contacts_contactfire table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_contactfire_on_delete() RETURNS TRIGGER AS $$
BEGIN
    -- add negative item counts for all campaign event fire rows being deleted
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT org_id, 'campfires:' || scope, -count(*), FALSE FROM oldtab WHERE fire_type = 'C' GROUP BY 1, 2;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER temba_contactfire_on_insert
AFTER INSERT ON contacts_contactfire REFERENCING NEW TABLE AS newtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_contactfire_on_insert();

CREATE TRIGGER temba_contactfire_on_delete
AFTER DELETE ON contacts_contactfire REFERENCING OLD TABLE AS oldtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_contactfire_on_delete();
"""


class Migration(migrations.Migration):

    dependencies = [
        ("campaigns", "0069_alter_campaignevent_fire_version"),
    ]

    operations = [
        migrations.RunSQL(SQL),
    ]
