# Generated by Django 5.1.4 on 2025-02-06 19:15

from django.db import migrations, transaction


def convert_eventfires(apps, schema_editor):
    EventFire = apps.get_model("campaigns", "EventFire")
    ContactFire = apps.get_model("contacts", "ContactFire")

    num_converted = 0
    while True:
        with transaction.atomic():
            batch = list(EventFire.objects.filter(fired=None).select_related("event__campaign")[:1000])
            if not batch:
                break

            fires = []
            for ef in batch:
                fires.append(
                    ContactFire(
                        org_id=ef.event.campaign.org_id,
                        contact_id=ef.contact_id,
                        fire_type="C",
                        scope=str(ef.event_id),
                        fire_on=ef.scheduled,
                        extra={},
                    )
                )
            ContactFire.objects.bulk_create(fires)
            EventFire.objects.filter(id__in=[ef.id for ef in batch]).delete()

        num_converted += len(batch)
        print(f"Converted {num_converted} event fires")


def apply_manual():  # pragma: no cover
    from django.apps import apps

    convert_eventfires(apps, None)


class Migration(migrations.Migration):

    dependencies = [
        ("campaigns", "0063_squashed"),
        ("contacts", "0200_contactfire_session_uuid_contactfire_sprint_uuid_and_more"),
    ]

    operations = [migrations.RunPython(convert_eventfires, migrations.RunPython.noop)]
