# Generated by Django 5.2.2 on 2025-07-02 14:48

import django.utils.timezone
import storages.backends.s3
import temba.users.models
import temba.utils.fields
import temba.utils.uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, unique=True)),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en-us", "English"),
                            ("cs", "Czech"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("mn", "Mongolian"),
                            ("pt-br", "Portuguese"),
                            ("ru", "Russian"),
                        ],
                        default="en-us",
                        max_length=8,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        null=True,
                        storage=storages.backends.s3.S3Storage(
                            bucket_name="temba-default",
                            default_acl="public-read",
                            querystring_auth=False,
                            signature_version="s3v4",
                        ),
                        upload_to=temba.utils.fields.UploadToIdPathAndRename(
                            "avatars/"
                        ),
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_auth_on", models.DateTimeField(null=True)),
                ("is_system", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("external_id", models.CharField(max_length=128, null=True)),
                ("verification_token", models.CharField(max_length=64, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", temba.users.models.UserManager()),
            ],
        ),
    ]
