# Generated by Django 5.1.4 on 2025-03-06 23:44
from allauth.account.models import EmailAddress
from allauth.mfa.adapter import get_adapter
from allauth.mfa.models import Authenticator

from django.contrib.auth import get_user_model
from django.db import migrations


def migration_mfa(apps, schema_editor):
    User = get_user_model()

    adapter = get_adapter()
    authenticators = []

    users = User.objects.filter(two_factor_enabled=True)
    for user in users:
        if Authenticator.objects.filter(user=user).exists():  # pragma: no cover
            continue
        backup_tokens = set(user.backup_tokens.filter(is_used=False).values_list("token", flat=True))
        totp_authenticator = Authenticator(
            user_id=user.id,
            type=Authenticator.Type.TOTP,
            data={"secret": adapter.encrypt(user.two_factor_secret)},
        )
        authenticators.append(totp_authenticator)
        authenticators.append(
            Authenticator(
                user_id=user.id,
                type=Authenticator.Type.RECOVERY_CODES,
                data={
                    "migrated_codes": [adapter.encrypt(t) for t in backup_tokens],
                },
            )
        )

    Authenticator.objects.bulk_create(authenticators)
    users = User.objects.filter(email_status="V")
    for user in users:
        EmailAddress.objects.filter(user=user).delete()
        EmailAddress.objects.create(
            user=user,
            email=user.email,
            verified=True,
            primary=True,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0012_remove_user_username"),
    ]

    operations = [migrations.RunPython(migration_mfa, migrations.RunPython.noop)]
