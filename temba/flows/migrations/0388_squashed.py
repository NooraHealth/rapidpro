# Generated by Django 5.2.2 on 2025-07-02 14:48

import django.contrib.postgres.indexes
import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("ai", "0007_squashed"),
        ("contacts", "0208_squashed"),
        ("flows", "0387_squashed"),
        ("globals", "0015_squashed"),
        ("ivr", "0036_squashed"),
        ("msgs", "0288_squashed"),
        ("orgs", "0171_squashed"),
        ("templates", "0046_squashed"),
        ("tickets", "0078_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="flow",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="field_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="contacts.contactfield"),
        ),
        migrations.AddField(
            model_name="flow",
            name="flow_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="flows.flow"),
        ),
        migrations.AddField(
            model_name="flow",
            name="global_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="globals.global"),
        ),
        migrations.AddField(
            model_name="flow",
            name="group_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="contacts.contactgroup"),
        ),
        migrations.AddField(
            model_name="flow",
            name="label_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="msgs.label"),
        ),
        migrations.AddField(
            model_name="flow",
            name="llm_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="ai.llm"),
        ),
        migrations.AddField(
            model_name="flow",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="optin_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="msgs.optin"),
        ),
        migrations.AddField(
            model_name="flow",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="flows",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="saved_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="flow_saves",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="template_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="templates.template"),
        ),
        migrations.AddField(
            model_name="flow",
            name="topic_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="tickets.topic"),
        ),
        migrations.AddField(
            model_name="flow",
            name="user_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="flowactivitycount",
            name="flow",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="counts",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowlabel",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowlabel",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowlabel",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="flow_labels",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="labels",
            field=models.ManyToManyField(related_name="flows", to="flows.flowlabel"),
        ),
        migrations.AddField(
            model_name="flowresultcount",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="result_counts",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowrevision",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="revisions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowrevision",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="revisions",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="contact",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="runs",
                to="contacts.contact",
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="runs",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="org",
            field=models.ForeignKey(
                db_index=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="runs",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="call",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="session",
                to="ivr.call",
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sessions",
                to="contacts.contact",
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="current_flow",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sessions",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="contacts",
            field=models.ManyToManyField(to="contacts.contact"),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="starts",
                to="flows.flow",
            ),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="groups",
            field=models.ManyToManyField(to="contacts.contactgroup"),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="modified_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowstart",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="flow_starts",
                to="orgs.org",
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="start",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="runs",
                to="flows.flowstart",
            ),
        ),
        migrations.AddField(
            model_name="flowstartcount",
            name="start",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="counts",
                to="flows.flowstart",
            ),
        ),
        migrations.AddIndex(
            model_name="flowactivitycount",
            index=models.Index(
                models.F("flow"),
                django.contrib.postgres.indexes.OpClass("scope", name="varchar_pattern_ops"),
                name="flowactivitycount_flow_scope",
            ),
        ),
        migrations.AddIndex(
            model_name="flowactivitycount",
            index=models.Index(
                condition=models.Q(("is_squashed", False)),
                fields=["flow", "scope"],
                name="flowactivitycount_unsquashed",
            ),
        ),
        migrations.AddConstraint(
            model_name="flowlabel",
            constraint=models.UniqueConstraint(
                models.F("org"),
                django.db.models.functions.text.Lower("name"),
                name="unique_flowlabel_names",
            ),
        ),
        migrations.AddConstraint(
            model_name="flow",
            constraint=models.UniqueConstraint(
                models.F("org"),
                django.db.models.functions.text.Lower("name"),
                name="unique_flow_names",
            ),
        ),
        migrations.AddIndex(
            model_name="flowresultcount",
            index=models.Index(
                condition=models.Q(("is_squashed", False)),
                fields=["flow", "result", "category"],
                name="flowresultcount_unsquashed",
            ),
        ),
        migrations.AddIndex(
            model_name="flowsession",
            index=models.Index(
                condition=models.Q(("ended_on__isnull", False)),
                fields=["ended_on"],
                name="flowsessions_ended",
            ),
        ),
        migrations.AddConstraint(
            model_name="flowsession",
            constraint=models.CheckConstraint(
                condition=models.Q(("status", "W"), ("ended_on__isnull", False), _connector="OR"),
                name="flows_session_non_waiting_has_ended_on",
            ),
        ),
        migrations.AddConstraint(
            model_name="flowsession",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("output__isnull", False),
                    ("output_url__isnull", False),
                    _connector="OR",
                ),
                name="flows_session_has_output_or_url",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(
                condition=models.Q(("created_by__isnull", False)),
                fields=["org", "-created_on"],
                name="flows_flowstarts_org_created",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(
                condition=models.Q(("created_by__isnull", False)),
                fields=["org", "-modified_on"],
                name="flows_flowstarts_org_modified",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(
                fields=["org", "start_type", "-created_on"],
                name="flows_flowstart_org_start_type",
            ),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(fields=["flow", "-modified_on", "-id"], name="flowruns_api_by_flow"),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                condition=models.Q(("responded", True)),
                fields=["flow", "-modified_on", "-id"],
                name="flowruns_api_responded_by_flow",
            ),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(fields=["org", "-modified_on", "-id"], name="flowruns_api_by_org"),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                condition=models.Q(("responded", True)),
                fields=["org", "-modified_on", "-id"],
                name="flowruns_api_responded_by_org",
            ),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                condition=models.Q(("status__in", ("A", "W"))),
                fields=["org", "current_node_uuid"],
                include=("contact",),
                name="flows_flowrun_contacts_at_node",
            ),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                fields=["contact"],
                include=("flow",),
                name="flows_flowrun_contact_inc_flow",
            ),
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                condition=models.Q(("status__in", ("A", "W"))),
                fields=["session_uuid"],
                name="flowruns_by_session",
            ),
        ),
        migrations.AddConstraint(
            model_name="flowrun",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("status__in", ("A", "W")),
                    ("exited_on__isnull", False),
                    _connector="OR",
                ),
                name="flows_run_inactive_has_exited_on",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstartcount",
            index=models.Index(
                condition=models.Q(("is_squashed", False)),
                fields=["start"],
                name="flowstartcounts_unsquashed",
            ),
        ),
    ]
